---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const blogPosts = await getCollection('blogs');
  const categories = [...new Set(blogPosts.map(post => post.data.category).filter(Boolean))];
  
  return categories.map((category) => ({
    params: { category },
    props: { category, posts: blogPosts.filter(post => post.data.category === category) },
  }));
}

const { category, posts } = Astro.props;
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

const categoryEmojis = {
  'ゲーム': '🎮',
  '開発': '💻',
  '投資': '📈',
  '雑記': '📝'
};
---

<Layout title={`${category} - 雑記ブログ`}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">
        {categoryEmojis[category]} {category}
      </h1>
      <p class="text-xl text-gray-600">
        {category}に関する記事一覧
      </p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {sortedPosts.map((post) => (
        <article class="card">
          <div class="text-sm text-gray-500 mb-2">
            📅 {post.data.pubDate.toLocaleDateString('ja-JP')}
          </div>
          <h2 class="text-xl font-semibold mb-3 text-gray-900">
            <a href={`/blogs/${post.slug}`} class="hover:text-blue-600">
              {post.data.title}
            </a>
          </h2>
          <p class="text-gray-600 mb-4">{post.data.description}</p>
          
          <div class="flex items-center justify-between">
            <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
              {post.data.category}
            </span>
            <a 
              href={`/blogs/${post.slug}`} 
              class="text-blue-600 hover:text-blue-800 font-medium"
            >
              続きを読む →
            </a>
          </div>
          
          {post.data.tags && post.data.tags.length > 0 && (
            <div class="flex flex-wrap gap-1 mt-3">
              {post.data.tags.map(tag => (
                <span class="bg-gray-100 text-gray-600 px-2 py-1 rounded text-xs">
                  #{tag}
                </span>
              ))}
            </div>
          )}
        </article>
      ))}
    </div>
    
    <div class="mt-12 text-center">
      <a href="/blogs" class="text-blue-600 hover:text-blue-800 font-medium">
        ← すべての記事を見る
      </a>
    </div>
  </div>
</Layout>
